{"version":3,"sources":["app.js","environment.js","main.js","goal/goal.js","home/index.js","log/log.js","previous/previous.js","reg/reg.js","resources/index.js"],"names":["App","configureRouter","config","router","title","map","route","name","moduleId","nav","debug","testing","host","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","goal","Home","log","previous","reg","userData","addUser","client","fetch","response","json","console","data","firstName"],"mappings":";;;;;;;;;;;;;MAAaA,cAAAA;;;;;kBAEZC,2CAAgBC,QAAQC,QAAQ;AAC7B,WAAKA,MAAL,GAAcA,MAAd;AACAD,aAAOE,KAAP,GAAe,4BAAf;;AAEAF,aAAOG,GAAP,CAAW,CACT,EAAEC,OAAO,CAAC,EAAD,EAAK,MAAL,CAAT,EAA6BC,MAAM,MAAnC,EAAiDC,UAAU,YAA3D,EAA0EJ,OAAO,WAAjF,EAAgGK,KAAK,IAArG,EADS,EAET,EAAEH,OAAO,KAAT,EAAiBC,MAAM,KAAvB,EAAmCC,UAAU,SAA7C,EAAwDJ,OAAO,cAA/D,EAAiFK,KAAK,IAAtF,EAFS,EAGT,EAAEH,OAAO,KAAT,EAAiBC,MAAM,KAAvB,EAAmCC,UAAU,SAA7C,EAAwDJ,OAAO,OAA/D,EAA0EK,KAAK,IAA/E,EAHS,EAIT,EAAEH,OAAO,MAAT,EAAkBC,MAAM,MAAxB,EAAqCC,UAAU,WAA/C,EAA4DJ,OAAO,MAAnE,EAA6EK,KAAK,IAAlF,EAJS,EAKT,EAAEH,OAAO,UAAT,EAAsBC,MAAM,UAA5B,EAA6CC,UAAU,mBAAvD,EAA4EJ,OAAO,UAAnF,EAAiGK,KAAK,IAAtG,EALS,CAAX;AAOD;;;;;;;;;;;oBCbY;AACbC,WAAO,IADM;AAEbC,aAAS,IAFI;AAGbC,UAAM;AAHO;;;;;;;;UCSCC,YAAAA;;;;;;;;;;AANhBC,UAAQZ,MAAR,CAAe;AACba,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASH,SAAT,CAAmBI,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYV,KAAhB,EAAuB;AACrBO,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYV,OAAhB,EAAyB;AACvBM,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;;;;;;;;MCvBYC,eAAAA;;;;;;;;;;;;;;;;;MCAAC,eAAAA;;;;;;;;;;;;;;;;;MCAAC,cAAAA;;;;;;;;;;;;;;;;;MCAAC,mBAAAA;;;;;;;;;;;;;;;;;;QCEAC,cAAAA;;;;iBAETC,WAAW;;;sBAEXC,6BAAU;AACN,gBAAIC,SAAS,oCAAb;;AAEAA,mBAAOC,KAAP,CAAa,iCAAb,EAAgD;AAC5C,0BAAU,MADkC;AAE5C,wBAAQ,8BAAK,KAAKH,QAAV;AAFoC,aAAhD,EAIKP,IAJL,CAIU;AAAA,uBAAYW,SAASC,IAAT,EAAZ;AAAA,aAJV,EAKKZ,IALL,CAKU,gBAAQ;AACda,wBAAQT,GAAR,CAAY,oBAAoBU,KAAKC,SAArC;AACL,aAPC;;AASCF,oBAAQT,GAAR,CAAY,gBAAZ;AACJ;;;;;;;;;;;UCnBWf,YAAAA;AAAT,WAASA,SAAT,CAAmBX,MAAnB,EAA2B,CAEjC","file":"app-bundle.js","sourcesContent":["export class App {\r\n    \r\n configureRouter(config, router) {\r\n    this.router = router;\r\n    config.title = 'Aurelia Application FitNow';\r\n     \r\n    config.map([\r\n      { route: ['', 'home'],       name: 'home',       moduleId: 'home/index' , title: \"Home page\",   nav: true },\r\n      { route: 'reg',  name: 'reg',      moduleId: 'reg/reg', title: \"Registration\",   nav: true },\r\n      { route: 'log',  name: 'log',      moduleId: 'log/log', title: \"Login\",   nav: true },\r\n      { route: 'goal',  name: 'goal',      moduleId: 'goal/goal', title: \"Goal\",   nav: true },\r\n      { route: 'previous',  name: 'previous',      moduleId: 'previous/previous', title: \"Previous\",   nav: true },\r\n    ]);\r\n  }\r\n    \r\n}","export default {\r\n  debug: true,\r\n  testing: true,\r\n  host: \"http://localhost:8080\"\r\n};\r\n","import environment from './environment';\r\n\r\n//Configure Bluebird Promises.\r\nPromise.config({\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","export class goal {\r\n\r\n}","export class Home {\r\n}","export class log {\r\n}","export class previous {\r\n}","import {HttpClient, json} from 'aurelia-fetch-client'\r\n\r\nexport class reg {\r\n    \r\n    userData = {}\r\n    \r\n    addUser() {\r\n        let client = new HttpClient();\r\n        \r\n        client.fetch('http://localhost:8080/users/add', {\r\n            'method': \"POST\",\r\n            'body': json(this.userData)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n            console.log(\"Server saatis: \" + data.firstName);\r\n      });\r\n        \r\n         console.log(\"Meetod töötab!\")\r\n    }\r\n}","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n"],"sourceRoot":".."}